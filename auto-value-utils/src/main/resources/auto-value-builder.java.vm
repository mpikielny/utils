package $targetClass.packageName();

#parse("macros.vm")

$imports

@$[javax.annotation.Generated]("$processor")
public interface $targetClass.simpleName()<##
#foreach ($tp in $sourceClass.typeParams())##
    $[$tp.fullDeclaration()], ##
#end##
_B extends $targetClass.simpleName()<##
#foreach ($tp in $sourceClass.typeParams())##
    $tp.type(), ##
#end##
_B>> ##
#if (!$builders.empty)##
extends ##
    #foreach ($builder in $builders)##
        $[$builder.builderType().erasureName()]<##
        #foreach ($tp in $builder.valueType().typeParams())##
            $tp.type(), ##
        #end##
        _B>##
        #if ($foreach.hasNext), #end##
    #end##
#end ##
{
#foreach ($p in $properties)##
    #foreach ($a in $p.annotations())##
        #if ($a.type().simpleName() != "Nullable")##
##

    $a.asString()##
        #end##
    #end##
##

    _B ${p.setterName()}($[$p.type()] value);
    #if ($p.hasBuilder() && !$p.isOptional())##
##

    $[$p.builderType()] ${p.name()}Builder();
        #foreach ($bm in $p.builderMethods())##
##

    default _B $p.name()${utils.capitalize($bm.name())}(##
            #foreach ($bmarg in $bm.params())##
                #if (!$foreach.hasNext && $bmarg.type().isArray())##
            $[$bmarg.type().elementTypeOrSelf()]... ##
                #else##
            $[$bmarg.type()] ##
                #end##
            $bmarg.name()##
                #if ($foreach.hasNext), #end##
            #end) {##
##

        ${p.name()}Builder().$bm.name()(##
            #foreach ($bmarg in $bm.params())##
           $bmarg.name()##
               #if ($foreach.hasNext), #end##
            #end); ##
##

        return (_B)this;
    }

##
        #end##
    #end##

#if ($foreach.hasNext)

#end
#end
}
